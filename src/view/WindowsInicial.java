/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import model.enumOrdertype;
import model.enumSortType;

/**
 *
 * @author Jece Xavier
 */
public class WindowsInicial extends javax.swing.JFrame {

    /**
     * Creates new form WindowsInicial
     */
    public WindowsInicial() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jplDecresente = new javax.swing.JPanel();
        jbtnBubllerDecresente = new javax.swing.JButton();
        jbtnSelectionDecresente = new javax.swing.JButton();
        jbtnInsertionDecresente = new javax.swing.JButton();
        jbtnMergeDecresente = new javax.swing.JButton();
        jbtnQuickDecresente = new javax.swing.JButton();
        jbtnShellDecresente = new javax.swing.JButton();
        jbtnHeapDecresente = new javax.swing.JButton();
        jplCrescente = new javax.swing.JPanel();
        jbtnBubllerCresente = new javax.swing.JButton();
        jbtnSelectionCresente = new javax.swing.JButton();
        jbtnInsertionCresente = new javax.swing.JButton();
        jbtnMergeCresente = new javax.swing.JButton();
        jbtnQuickCresente = new javax.swing.JButton();
        jbtnShellCresente = new javax.swing.JButton();
        jbtnHeapCresente = new javax.swing.JButton();
        jplRandom = new javax.swing.JPanel();
        jbtnBubllerRandom = new javax.swing.JButton();
        jbtnSelectionRandom = new javax.swing.JButton();
        jbtnInsertionRandom = new javax.swing.JButton();
        jbtnMergeRandom = new javax.swing.JButton();
        jbtnQuickRandom = new javax.swing.JButton();
        jbtnShellRandom = new javax.swing.JButton();
        jbtnHeapRandom = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Symbol", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Qual Grafico Deseja ver?");
        jLabel1.setToolTipText("");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 13, 517, 33));

        jplDecresente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados Ordenados Decresente", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Light", 1, 18))); // NOI18N
        jplDecresente.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbtnBubllerDecresente.setText("Bublle Sort");
        jbtnBubllerDecresente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBubllerDecresenteActionPerformed(evt);
            }
        });
        jplDecresente.add(jbtnBubllerDecresente, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 40, -1, -1));

        jbtnSelectionDecresente.setText("Selection Sort");
        jbtnSelectionDecresente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSelectionDecresenteActionPerformed(evt);
            }
        });
        jplDecresente.add(jbtnSelectionDecresente, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 72, -1, -1));

        jbtnInsertionDecresente.setText("Insertion Sort");
        jbtnInsertionDecresente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnInsertionDecresenteActionPerformed(evt);
            }
        });
        jplDecresente.add(jbtnInsertionDecresente, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 104, -1, -1));

        jbtnMergeDecresente.setText("Merge Sort");
        jbtnMergeDecresente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnMergeDecresenteActionPerformed(evt);
            }
        });
        jplDecresente.add(jbtnMergeDecresente, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 136, -1, -1));

        jbtnQuickDecresente.setText("Quick Sort");
        jbtnQuickDecresente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnQuickDecresenteActionPerformed(evt);
            }
        });
        jplDecresente.add(jbtnQuickDecresente, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 168, -1, -1));

        jbtnShellDecresente.setText("Shell Sort");
        jbtnShellDecresente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnShellDecresenteActionPerformed(evt);
            }
        });
        jplDecresente.add(jbtnShellDecresente, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 200, -1, -1));

        jbtnHeapDecresente.setText("Heap Sort");
        jbtnHeapDecresente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnHeapDecresenteActionPerformed(evt);
            }
        });
        jplDecresente.add(jbtnHeapDecresente, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 232, -1, 30));

        getContentPane().add(jplDecresente, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, 310, 280));

        jplCrescente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados Ordenados Cresentes", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Light", 1, 18))); // NOI18N
        jplCrescente.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbtnBubllerCresente.setText("Bublle Sort");
        jbtnBubllerCresente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBubllerCresenteActionPerformed(evt);
            }
        });
        jplCrescente.add(jbtnBubllerCresente, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 40, -1, -1));

        jbtnSelectionCresente.setText("Selection Sort");
        jbtnSelectionCresente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSelectionCresenteActionPerformed(evt);
            }
        });
        jplCrescente.add(jbtnSelectionCresente, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 72, -1, -1));

        jbtnInsertionCresente.setText("Insertion Sort");
        jbtnInsertionCresente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnInsertionCresenteActionPerformed(evt);
            }
        });
        jplCrescente.add(jbtnInsertionCresente, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 104, -1, -1));

        jbtnMergeCresente.setText("Merge Sort");
        jbtnMergeCresente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnMergeCresenteActionPerformed(evt);
            }
        });
        jplCrescente.add(jbtnMergeCresente, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 136, -1, -1));

        jbtnQuickCresente.setText("Quick Sort");
        jbtnQuickCresente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnQuickCresenteActionPerformed(evt);
            }
        });
        jplCrescente.add(jbtnQuickCresente, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 168, -1, -1));

        jbtnShellCresente.setText("Shell Sort");
        jbtnShellCresente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnShellCresenteActionPerformed(evt);
            }
        });
        jplCrescente.add(jbtnShellCresente, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 200, -1, -1));

        jbtnHeapCresente.setText("Heap Sort");
        jbtnHeapCresente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnHeapCresenteActionPerformed(evt);
            }
        });
        jplCrescente.add(jbtnHeapCresente, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 232, -1, 23));

        getContentPane().add(jplCrescente, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 59, 290, -1));

        jplRandom.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados Aleat√≥rios", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Light", 1, 18))); // NOI18N
        jplRandom.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbtnBubllerRandom.setText("Bublle Sort");
        jbtnBubllerRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBubllerRandomActionPerformed(evt);
            }
        });
        jplRandom.add(jbtnBubllerRandom, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 40, -1, -1));

        jbtnSelectionRandom.setText("Selection Sort");
        jbtnSelectionRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSelectionRandomActionPerformed(evt);
            }
        });
        jplRandom.add(jbtnSelectionRandom, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 72, -1, -1));

        jbtnInsertionRandom.setText("Insertion Sort");
        jbtnInsertionRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnInsertionRandomActionPerformed(evt);
            }
        });
        jplRandom.add(jbtnInsertionRandom, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 104, -1, -1));

        jbtnMergeRandom.setText("Merge Sort");
        jbtnMergeRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnMergeRandomActionPerformed(evt);
            }
        });
        jplRandom.add(jbtnMergeRandom, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 136, -1, -1));

        jbtnQuickRandom.setText("Quick Sort");
        jbtnQuickRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnQuickRandomActionPerformed(evt);
            }
        });
        jplRandom.add(jbtnQuickRandom, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 168, -1, -1));

        jbtnShellRandom.setText("Shell Sort");
        jbtnShellRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnShellRandomActionPerformed(evt);
            }
        });
        jplRandom.add(jbtnShellRandom, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 200, -1, -1));

        jbtnHeapRandom.setText("Heap Sort");
        jbtnHeapRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnHeapRandomActionPerformed(evt);
            }
        });
        jplRandom.add(jbtnHeapRandom, new org.netbeans.lib.awtextra.AbsoluteConstraints(68, 232, -1, 23));

        getContentPane().add(jplRandom, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, 280, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnBubllerCresenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBubllerCresenteActionPerformed
        try {
            new WindwonsGraphic(enumSortType.BUBBLESORT, enumOrdertype.ASCENDING).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnBubllerCresenteActionPerformed

    private void jbtnBubllerDecresenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBubllerDecresenteActionPerformed
        try {
            new WindwonsGraphic(enumSortType.BUBBLESORT, enumOrdertype.DECREASING).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnBubllerDecresenteActionPerformed

    private void jbtnBubllerRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBubllerRandomActionPerformed
        try {
            new WindwonsGraphic(enumSortType.BUBBLESORT, enumOrdertype.RANDOM).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnBubllerRandomActionPerformed

    private void jbtnSelectionCresenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSelectionCresenteActionPerformed
       try {
            new WindwonsGraphic(enumSortType.SELECTIONSORT, enumOrdertype.ASCENDING).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnSelectionCresenteActionPerformed

    private void jbtnSelectionDecresenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSelectionDecresenteActionPerformed
        try {
            new WindwonsGraphic(enumSortType.SELECTIONSORT, enumOrdertype.DECREASING).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnSelectionDecresenteActionPerformed

    private void jbtnSelectionRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSelectionRandomActionPerformed
        try {
            new WindwonsGraphic(enumSortType.SELECTIONSORT, enumOrdertype.RANDOM).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnSelectionRandomActionPerformed

    private void jbtnInsertionCresenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnInsertionCresenteActionPerformed
        try {
            new WindwonsGraphic(enumSortType.INSERTIONSORT, enumOrdertype.ASCENDING).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnInsertionCresenteActionPerformed

    private void jbtnInsertionDecresenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnInsertionDecresenteActionPerformed
        try {
            new WindwonsGraphic(enumSortType.INSERTIONSORT, enumOrdertype.DECREASING).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnInsertionDecresenteActionPerformed

    private void jbtnInsertionRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnInsertionRandomActionPerformed
       try {
            new WindwonsGraphic(enumSortType.INSERTIONSORT, enumOrdertype.RANDOM).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnInsertionRandomActionPerformed

    private void jbtnMergeCresenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnMergeCresenteActionPerformed
        try {
            new WindwonsGraphic(enumSortType.MERGESORT, enumOrdertype.ASCENDING).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnMergeCresenteActionPerformed

    private void jbtnMergeDecresenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnMergeDecresenteActionPerformed
        try {
            new WindwonsGraphic(enumSortType.MERGESORT, enumOrdertype.DECREASING).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnMergeDecresenteActionPerformed

    private void jbtnMergeRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnMergeRandomActionPerformed
       try {
            new WindwonsGraphic(enumSortType.MERGESORT, enumOrdertype.RANDOM).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnMergeRandomActionPerformed

    private void jbtnQuickCresenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnQuickCresenteActionPerformed
        try {
            new WindwonsGraphic(enumSortType.QUICKSORT, enumOrdertype.ASCENDING).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnQuickCresenteActionPerformed

    private void jbtnQuickDecresenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnQuickDecresenteActionPerformed
        try {
            new WindwonsGraphic(enumSortType.QUICKSORT, enumOrdertype.DECREASING).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnQuickDecresenteActionPerformed

    private void jbtnQuickRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnQuickRandomActionPerformed
       try {
            new WindwonsGraphic(enumSortType.QUICKSORT, enumOrdertype.RANDOM).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnQuickRandomActionPerformed

    private void jbtnShellCresenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnShellCresenteActionPerformed
       try {
            new WindwonsGraphic(enumSortType.SHELLSORT, enumOrdertype.ASCENDING).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnShellCresenteActionPerformed

    private void jbtnShellDecresenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnShellDecresenteActionPerformed
       try {
            new WindwonsGraphic(enumSortType.SHELLSORT, enumOrdertype.DECREASING).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnShellDecresenteActionPerformed

    private void jbtnShellRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnShellRandomActionPerformed
       try {
            new WindwonsGraphic(enumSortType.SHELLSORT, enumOrdertype.RANDOM).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnShellRandomActionPerformed

    private void jbtnHeapCresenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnHeapCresenteActionPerformed
       try {
            new WindwonsGraphic(enumSortType.HEAPSORT, enumOrdertype.ASCENDING).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnHeapCresenteActionPerformed

    private void jbtnHeapDecresenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnHeapDecresenteActionPerformed
        try {
            new WindwonsGraphic(enumSortType.HEAPSORT, enumOrdertype.DECREASING).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnHeapDecresenteActionPerformed

    private void jbtnHeapRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnHeapRandomActionPerformed
        try {
            new WindwonsGraphic(enumSortType.HEAPSORT, enumOrdertype.RANDOM).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(WindowsInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnHeapRandomActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WindowsInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WindowsInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WindowsInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WindowsInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WindowsInicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jbtnBubllerCresente;
    private javax.swing.JButton jbtnBubllerCresente1;
    private javax.swing.JButton jbtnBubllerDecresente;
    private javax.swing.JButton jbtnBubllerRandom;
    private javax.swing.JButton jbtnHeap1;
    private javax.swing.JButton jbtnHeapCresente;
    private javax.swing.JButton jbtnHeapDecresente;
    private javax.swing.JButton jbtnHeapRandom;
    private javax.swing.JButton jbtnInsertion1;
    private javax.swing.JButton jbtnInsertionCresente;
    private javax.swing.JButton jbtnInsertionDecresente;
    private javax.swing.JButton jbtnInsertionRandom;
    private javax.swing.JButton jbtnMerge1;
    private javax.swing.JButton jbtnMergeCresente;
    private javax.swing.JButton jbtnMergeDecresente;
    private javax.swing.JButton jbtnMergeRandom;
    private javax.swing.JButton jbtnQuick1;
    private javax.swing.JButton jbtnQuickCresente;
    private javax.swing.JButton jbtnQuickDecresente;
    private javax.swing.JButton jbtnQuickRandom;
    private javax.swing.JButton jbtnSelection1;
    private javax.swing.JButton jbtnSelectionCresente;
    private javax.swing.JButton jbtnSelectionDecresente;
    private javax.swing.JButton jbtnSelectionRandom;
    private javax.swing.JButton jbtnShell1;
    private javax.swing.JButton jbtnShellCresente;
    private javax.swing.JButton jbtnShellDecresente;
    private javax.swing.JButton jbtnShellRandom;
    private javax.swing.JPanel jplCrescente;
    private javax.swing.JPanel jplCrescente1;
    private javax.swing.JPanel jplDecresente;
    private javax.swing.JPanel jplRandom;
    // End of variables declaration//GEN-END:variables
}
